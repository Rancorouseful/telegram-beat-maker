import telebot
from keyboa import Keyboa #Keyboa
import os
import config
import make_beat

bot = telebot.TeleBot(config.TOKEN)

@bot.message_handler(commands=['start'])
def welcome(message):
    inline_markup = Keyboa(items=config.menu_buttons, items_in_row=2)
    bot.send_message(message.chat.id, '–ó–¥–∞—Ä–æ–≤–∞, –±–æ—Ç', reply_markup=inline_markup())

@bot.message_handler(commands=['menu'])
def welcome(message):
    inline_markup = Keyboa(items=config.menu_buttons, items_in_row=2)
    bot.send_message(message.chat.id, '–ú–µ–Ω—é:', reply_markup=inline_markup())

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –º–µ–Ω—é
@bot.callback_query_handler(func=lambda call: call.data in config.menu_buttons)
def menu(call):
    global msg
    try:
        if call.message:
            if call.data == '–ó–∞–∫–∞–∑–∞—Ç—å –±–∏—Ç':
                styles_markup = Keyboa(items=config.styles_markup, items_in_row=2)
                msg = bot.send_message(call.message.chat.id, '–í—ã–±–µ—Ä–∏ —Å—Ç–∏–ª—å –±–∏—Ç–∞:', reply_markup=styles_markup())
            elif call.data == '–ë–∞–ª–∞–Ω—Å':
                balance_markup = Keyboa(items=config.balance_buttons, items_in_row=2)
                bot.send_message(call.message.chat.id, '–ë–∞–ª–∞–Ω—Å: –Ω–∏—â–∏–π.', reply_markup=balance_markup())
            elif call.data == '–û –Ω–∞—Å':
                navigation_markup = Keyboa(items=config.navigation_buttons, items_in_row=2)
                bot.send_message(call.message.chat.id, '–û –Ω–∞—Å –º–Ω–æ–≥–æ –Ω–µ —Å–∫–∞–∂–µ—à—å.')
    except Exception as e:
        print(repr(e))

# user_id: call.data(style)
user_chosen_style = {}

@bot.callback_query_handler(func=lambda call: call.data in config.styles_markup)
def temp(call):
    global msg
    try:
        if call.message:
            user_chosen_style[call.message.chat.id] = call.data
            bot.delete_message(call.message.chat.id, msg.message_id)

            bpm_markup = Keyboa(items=config.bpm_buttons, items_in_row=3)
            msg = bot.send_message(call.message.chat.id, f'{call.data} - –æ—Ç–ª–∏—á–Ω—ã–π –≤—ã–±–æ—Ä! –¢–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–∏ —Ç–µ–º–ø:', reply_markup=bpm_markup()) 

    except Exception as e:
        print(repr(e))

@bot.callback_query_handler(func=lambda call: call.data in config.bpm_buttons)
def style(call):
    global msg
    try:
        if call.message:

            bot.delete_message(call.message.chat.id, msg.message_id)

            msg = bot.send_message(call.message.chat.id, '–î–µ–ª–∞—é –±–∏—Ç...')

            # –°–¥–µ–ª–∞—Ç—å –±–∏—Ç
            if user_chosen_style[call.message.chat.id] == 'Jersey Club':
                make_beat.jersey_club(call.message.chat.id, call.data)
            elif user_chosen_style[call.message.chat.id] == 'Trap':
                make_beat.trap(call.message.chat.id, call.data)
            
            # –£–¥–∞–ª–∏—Ç—å –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            bot.delete_message(call.message.chat.id, msg.message_id)

            # –û—Ç–ø—Ä–∞–≤–∏—Ç—å –±–∏—Ç
            bot.send_message(call.message.chat.id, f'–ó–∞–±–∏—Ä–∞–π —Å–≤–æ–π –±–∏—Ç –≤ —Å—Ç–∏–ª–µ:\n{user_chosen_style[call.message.chat.id]}\n\n —Å —Ç–µ–º–ø–æ–º:\n{call.data}\n\n–ë–∏—Ç –±—É–¥–µ—Ç —Ç—É—Ç üëá')
            del user_chosen_style[call.message.chat.id]

            # –û—Ç–∫—Ä—ã—Ç—å —Ñ–∞–π–ª
            beat = open(f'output_beats/{call.message.chat.id}.wav', 'rb')

            # –°–∫–∏–Ω—É—Ç—å —Ñ–∞–π–ª
            bot.send_audio(call.message.chat.id, beat) 

            # –ó–∞–∫—Ä—ã—Ç—å —Ñ–∞–π–ª
            beat.close()

            # –£–¥–∞–ª–∏—Ç—å —Ñ–∞–π–ª
            os.remove(f'output_beats/{call.message.chat.id}.wav')

    except Exception as e:
        print(repr(e))

bot.infinity_polling()